[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mlogv32"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "jinja2>=3.1.6",
    "lark[interegular]>=1.2.2",
    "pydantic>=2.11.5",
    "pymsch>=0.0.11",
    "pyperclip>=1.9.0",
    "pyyaml>=5.2",
    "riscof",
    "riscv-isac",
    "riscv-config>=3.18.3",
    "tqdm>=4.67.1",
    "typer>=0.15.4",
]

[dependency-groups]
dev = [
    "poethepoet>=0.35.0",
    "pre-commit",
    "ruff>=0.11.12",
]

[tool.uv]
override-dependencies = [
    "pyyaml>=6.0.2",
]

[tool.uv.sources]
pymsch = { git = "https://github.com/object-Object/pymsch", rev = "3c413fae16" }
riscof = { git = "https://github.com/riscv/riscof", rev = "9fe3597d75" }
riscv-isac = { git = "https://github.com/riscv-software-src/riscv-isac", rev = "777d2b4762" }

[tool.hatch.build.targets.wheel]
packages = [
    "python/src/mlogv32",
]

[tool.poe.tasks]
build     = "python -m mlogv32.preprocessor build src/cpu/cpu.yaml"
build-cpu = "python -m mlogv32.preprocessor build src/cpu/cpu.yaml --cpu"

[tool.ruff]
extend-exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

[tool.ruff.lint]
extend-select = [
    "I", # import sorting
    "RUF022", # __all__ sorting
]
extend-ignore = [
    # covered by Pyright
    "F821", # undefined variable
    "F401", # imported but unused
    "F841", # unused variable
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"

extraPaths = [
    "python/src",
]
include = [
    "python/*",
    "riscof/mlogv32",
]
exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

typeCheckingMode = "standard"

strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownLambdaType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"

reportUnknownArgumentType = "information"
reportUnknownMemberType = "information"
reportUnknownVariableType = "information"

reportMissingTypeStubs = "none"
reportDuplicateImport = "none"
